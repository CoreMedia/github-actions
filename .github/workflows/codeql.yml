# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#

# When the language to be analyzed is 'java', this workflow executes a Maven build prior to the analysis. But it
# assumes that all required artifacts that are needed for the build are already cached and no downloads from a
# custom Maven repository manager are required anymore.

# Required permissions that must be set in caller workflows (in private repositories):
# actions:          read      for github/codeql-action/* (reason not documented)
# contents:         read      for actions/checkout to fetch code
# security-events:  write     for github/codeql-action/upload-sarif to upload SARIF results

name: CodeQL Analysis

on:
  workflow_call:
    inputs:
      checkout_ref:
        description: The branch to checkout - see https://github.com/actions/checkout#usage (ref).
        type: string
        required: false
      config_file:
        description: |
          The path of the CodeQL config file to use - see https://github.com/github/codeql-action and
          https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/customizing-code-scanning#working-with-custom-configuration-files
        type: string
        required: false
      java_version:
        description: |
          The Java version to be used - see https://github.com/actions/setup-java#usage (java-version). It's only used
          when the language to be analysed is 'java'.
        type: string
        required: false
        default: 11
      java_distribution:
        description: |
          The Java distribution to be used - see https://github.com/actions/setup-java#usage (distribution). It's only
          used when the language to be analysed is 'java'.
        type: string
        required: false
        default: corretto
      languages:
        description: |
          The languages for the CodeQL check as JSON array string. Supported array element values are: 'cpp', 'csharp',
          'go', 'java', 'javascript', 'typescript', 'python', 'ruby' - see https://github.com/github/codeql-action and
          https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/.
        type: string
        required: true
      maven_cache_key_prefix:
        description: |
          A custom cache key prefix for the local Maven repository. By default, the workflow uses the optimized cache
          implementation of the 'setup_java' action - see https://github.com/actions/setup-java#usage (cache). When
          a custom cache key prefix is provided, it uses the 'cache' action directly and configures the key with the
          custom prefix instead of the 'setup-java' prefix - https://github.com/actions/cache#inputs (key). Please note
          that no 'restore-keys' optimization applies in this case.
        type: string
        required: false
      maven_settings:
        description: |
          The (user) 'settings.xml' file to be used for the Maven build. Environment variables for replacement tokens
          (like '${env.MY_USERNAME}') in the 'settings.xml' can be provided as secrets with the same name. They will
          internally be provided as environment variables to the build environment.
          Hint: Use 'secrets: inherit' to provide the secrets from the caller workflow's repository settings to the
          reusable workflow without having to map them one by one.
        type: string
        required: false
      queries:
        description: |
          The CodeQL query suites to run - see https://github.com/github/codeql-action and
          https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/customizing-code-scanning#using-queries-in-ql-packs
        type: string
        required: false
    outputs:
      teams_fact_json:
        description: The 'fact' JSON snippet that can be added to an MS Teams Notification.
        value: |
          {
            "name": "CodeQL Analysis:",
            "value": "${{ jobs.codeql.outputs.result }}"
          }

jobs:
  codeql:
    name: Analysis
    runs-on: ubuntu-latest
    outputs:
      result: ${{ job.status }}

    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJson(inputs.languages) }}
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Use only 'java' to analyze code written in Java, Kotlin or both
        # Use only 'javascript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Provide secrets to build environment
        uses: oNaiPs/secrets-to-env-action@v1.3
        with:
          secrets: ${{ toJSON(secrets) }}

      - name: Checkout repository
        uses: actions/checkout@v3.6.0
        with:
          ref: ${{ inputs.checkout_ref }}

      - name: Initialize internal configuration
        id: config
        run: |
          if [[ -n '${{ inputs.checkout_ref }}' ]]; then
            echo "checkout_sha=$(git show-ref ${{ inputs.checkout_ref }} | grep -v '/remotes/' | sed 's/ .*//')" >> "$GITHUB_OUTPUT"
            echo "checkout_ref=$(git show-ref ${{ inputs.checkout_ref }} | grep -v '/remotes/' | sed 's/.* //')" >> "$GITHUB_OUTPUT"
          fi

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2.21.4
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.

          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: ${{ inputs.queries }}
          config-file: ${{ inputs.config_file }}

      - name: Set up JDK
        if: matrix.language == 'java'
        uses: actions/setup-java@v3.12.0
        with:
          java-version: ${{ inputs.java_version }}
          distribution: ${{ inputs.java_distribution }}
          cache: ${{ (!env.ACT && !inputs.maven_cache_key_prefix) && 'maven' || '' }}

      - name: Cache Maven Repo with custom key (replacing cache from Set up JDK)
        if: ${{ !env.ACT && inputs.maven_cache_key_prefix }}
        uses: actions/cache@v3.3.1
        with:
          path: ~/.m2/repository
          key: ${{ inputs.maven_cache_key_prefix }}-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Overwrite Maven settings
        if: matrix.language == 'java' && inputs.maven_settings
        run: cp ${{ inputs.maven_settings }} ${HOME}/.m2/settings.xml

      # Autobuild attempts to build any compiled languages  (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2.21.4

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2.21.4
        with:
          category: "/language:${{ matrix.language }}"
          ref: ${{ steps.config.outputs.checkout_ref }}
          sha: ${{ steps.config.outputs.checkout_sha }}
